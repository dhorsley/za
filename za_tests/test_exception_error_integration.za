# Test exception handling integration with enhanced error reporting

# Enable enhanced error reporting
error_extend(true)

# Set up some global variables for testing
global_test_var = "global value"
global_number = 123

def test_function_with_exception()
    local_var = "test value"
    another_var = 42
    
    println "About to throw an exception in test_function_with_exception()"
    
    # This should trigger enhanced error reporting
    throw "test_exception" with "This is a test exception for enhanced error reporting"
    
    println "This line should not be reached"
end

def nested_function()
    x = 10
    y = "hello"
    
    println "Calling test_function_with_exception() from nested_function()"
    test_function_with_exception()
end

# Main test
println "[#6]Za Exception + Enhanced Error Reporting Integration Test[#-]"
println "Enhanced error reporting is enabled: {=enhancedErrorsEnabled}"

println "\nTriggering exception through nested function calls..."

# This will trigger the enhanced error reporting system
nested_function()

println "This line should not be reached" 