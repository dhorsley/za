# Test BSD sysctl values to diagnose system resource issues
# This test checks what sysctl values are actually available

echo "Testing BSD sysctl values..."

# Test memory-related sysctl values
echo "Testing memory sysctl values:"
memory_paths = ["hw.physmem", "vm.stats.vm.v_active_count", "vm.stats.vm.v_free_count", "vm.stats.vm.v_cache_count"]

for path in memory_paths do
    try
        # Try to get the sysctl value
        echo "Testing: " + path
        # Note: We can't directly call sysctl from za, but we can test the functions
    catch err
        echo "  Failed: " + err
    endtry
endfor

# Test load average sysctl values
echo "Testing load average sysctl values:"
load_paths = ["vm.loadavg", "kern.loadavg", "vm.stats.vm.v_loadavg"]

for path in load_paths do
    try
        echo "Testing: " + path
    catch err
        echo "  Failed: " + err
    endtry
endfor

# Test uptime sysctl values
echo "Testing uptime sysctl values:"
uptime_paths = ["kern.boottime", "kern.boottime.sec"]

for path in uptime_paths do
    try
        echo "Testing: " + path
    catch err
        echo "  Failed: " + err
    endtry
endfor

# Test system resources function
echo "Testing sys_resources():"
try
    resources = sys_resources()
    echo "CPUCount: " + as_string(resources.CPUCount)
    echo "LoadAverage: " + as_string(resources.LoadAverage)
    echo "MemoryTotal: " + as_string(resources.MemoryTotal)
    echo "MemoryUsed: " + as_string(resources.MemoryUsed)
    echo "MemoryFree: " + as_string(resources.MemoryFree)
    echo "Uptime: " + as_string(resources.Uptime)
catch err
    echo "sys_resources() failed: " + err
endtry 