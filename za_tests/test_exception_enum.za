# Test the exception enum system

println "Testing exception enum system..."

# Test 1: Check if ex enum exists and has default exceptions
println "\n=== Test 1: Default exceptions ==="
println "ex.divide_by_zero =", ex.divide_by_zero
println "ex.unknown =", ex.unknown
println "ex.file =", ex.file
println "ex.internal =", ex.internal

# Test 2: Register new exceptions
println "\n=== Test 2: Register new exceptions ==="
result1 = exreg("my_custom_error", 25)
println "Registered my_custom_error:", result1
println "ex.my_custom_error =", ex.my_custom_error

result2 = exreg("payment_failed", 30)
println "Registered payment_failed:", result2
println "ex.payment_failed =", ex.payment_failed

# Test 3: Try to register duplicate (should fail silently)
println "\n=== Test 3: Duplicate registration ==="
result3 = exreg("my_custom_error", 50)
println "Duplicate registration result:", result3
println "ex.my_custom_error still =", ex.my_custom_error

# Test 4: List all exception names
println "\n=== Test 4: All exception pairs ==="
names=enum_names(ref ex)
println "Exception count:",names.len
for i = 0 to names.len-1
    println "  ", names[i], "=", enum_all(ref ex)[i]
endfor

println "\nException enum system test completed!" 
