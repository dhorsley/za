
# maintainer as of 31/10/2019
# dhorsley@gmail.com


SCRIPT EXECUTION
----------------

path_to_binary/za <script_name>

-or-

Add a hashbang line and chmod your script to u+x.


LANGUAGE INSTALLATION FROM BINARY
---------------------------------

Copy za binary file to whichever path you want it to live on.

Alternatively, keep it local to where your script is.

It doesn't matter either way, it's self contained.


LANGUAGE INSTALLATION FROM SOURCE
---------------------------------

Ubuntu:

sudo apt update


first install:

adjust ./GO to suitable paths, then:

  ./GO
  go build za
  cp -f za /usr/bin/


subsequent rebuild/update/install:

  ./build libc [upx] [strip]

if the rebuild fails, then run go build za for better output.
the language version number will not appear at run-time unless compiled using the "build" script

To cross-compile for Alpine (default):
--------------------------------------

  ./build alpine [upx] [strip]

If you have UPX installed then the upx option above can be used to compress the binary for docker builds.


To cross-compile for Windows:
-----------------------------

If compiling on an Ubuntu host:

  ./build win

This option leaves the binary unstripped so that Windows 10 doesn't complain too much.

Also underwhelming in the Windows version:

    - ANSI support in interactive mode: windows default consoles just ain't great at it.


To compile on FreeBSD:
----------------------

  ./build

The OS should be detected by the build script. You should still do your initial build using the first
install instructions above.


