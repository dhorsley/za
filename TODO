
TODO
----

REMAINING CLEANUP
-----------------

    - cleaner error messages required in places.
    - some performance improvements are required.


KERNEL PARAMETER TUNING
-----------------------

* TODO: Kernel parameter tuning support
    - sysctl_get(parameter) - get kernel parameter value
    - sysctl_set(parameter, value) - set kernel parameter value
    - sysctl_list(category) - list parameters by category
    - sysctl_persist(parameter, value) - set parameter persistently
    - sysctl_validate(parameter, value) - validate parameter value
    - sysctl_categories() - list available parameter categories
    - sysctl_restore_defaults() - restore default kernel parameters

CORE FIREWALL DETECTION & MANAGEMENT
------------------------------------

* TODO: Active firewall detection (not just available)
    - nftables: kernel module check + active rules detection
    - firewalld: D-Bus connection + active service detection  
    - pf (BSD): CLI wrapper + active rules detection
    - Windows Firewall: WMI connection + active profiles detection

* TODO: Unified firewall API
    - firewall_capable() - detect active firewall with capabilities
    - firewall_guard() - safe guard for firewall operations
    - firewall_enable(firewall_type) - enable specific firewall
    - firewall_disable() - disable current active firewall
    - firewall_add_rule(protocol, port, action) - add firewall rule
    - firewall_remove_rule(protocol, port, action) - remove firewall rule
    - firewall_list_rules() - list current firewall rules
    - firewall_get_stats() - get firewall statistics

* TODO: Platform-specific native library integration
    - nftables: github.com/google/nftables (direct netlink)
    - firewalld: D-Bus interface (direct service communication)
    - Windows Firewall: WMI/COM interface (direct Windows API)
    - pf: CLI wrapper (no native library available)

* TODO: Privilege checking and security validation
    - has_privileges() - check if user has firewall management permissions
    - Platform-specific privilege validation (root, sudo, doas, Windows admin)
    - Automatic privilege requirement detection and error reporting

* TODO: Cross-platform consistency
    - Same API functions work across all supported platforms
    - Automatic platform detection and appropriate firewall selection
    - Unified error handling and status reporting

PLUGIN ARCHITECTURE FOR CUSTOM FIREWALLS
----------------------------------------

* TODO: Custom firewall plugin registration system
    - firewall_register_plugin(firewall_type, handler_functions)
    - firewall_unregister_plugin(firewall_type)
    - Plugin detection integration with native firewall detection
    - Plugin capability reporting and validation

* TODO: Plugin interface specification
    - detect() - detect if firewall is active
    - enable() - enable the firewall
    - disable() - disable the firewall  
    - add_rule(protocol, port, action) - add firewall rule
    - remove_rule(protocol, port, action) - remove firewall rule
    - list_rules() - list current rules
    - get_stats() - get firewall statistics
    - capabilities - list of supported capabilities

* TODO: Example plugins for legacy firewalls
    - iptables plugin (CLI wrapper)
    - ufw plugin (Ubuntu firewall)

ADVANCED FIREWALL FEATURES
--------------------------

* TODO: Real-time firewall monitoring
    - firewall_monitor_events() - real-time event streams
    - nftables_events() - netlink event monitoring
    - firewalld_events() - D-Bus event monitoring
    - Windows Firewall events - WMI event monitoring
    - pf events - CLI-based event monitoring

* TODO: Rate monitoring and statistics
    - firewall_rate_monitor() - hits/second monitoring
    - firewall_rate_alert(threshold) - rate threshold alerts
    - Rate history tracking and anomaly detection
    - Performance impact monitoring

FIREWALL EVENT LOGGING AND AUDIT
--------------------------------

* TODO: Firewall event logging and audit
    - firewall_log_events() - capture firewall events
    - firewall_audit_trail() - comprehensive audit logging
    - firewall_compliance_report() - compliance reporting
    - firewall_security_analysis() - security analysis and recommendations

    NOTES
    -----

    * All firewall operations should respect the "only one active firewall" principle
    * Native libraries should be used where possible (nftables, firewalld, Windows Firewall)
    * CLI wrappers only when no native library is available (pf)
    * Security and privilege validation is critical for all firewall operations
    * Cross-platform consistency is a key design principle
    * Performance and resource efficiency are important considerations


LATER / UNDECIDED
-----------------

    * add a test mode that *does not* test imported modules.
        - i.e. only test the main file and assume the modules are already tested.
        - currently, everything gets tested all the time.
        - may also be worth establishing a cache of tested modules/checksums to save re-testing

    * MAYBE: add install note for windows w/wsl stating that sudoers file may need 
            updating with : Defaults env_keep=WSL_DISTRO_NAME
            and possibly other env vars, depending on user requirements.


