#!/usr/bin/za

define item_check(left, right)
  on left==nil do return 1
  return 1 + left.item_check + right.item_check
enddef

define bottom_up_tree(depth)
    println "bup: d=",depth
    if depth>0
        depth--
        return [depth.bottom_up_tree, depth.bottom_up_tree]
    endif
    return [nil, nil]
enddef

input max_depth param 1
min_depth = 4
on min_depth + 2 > max_depth do max_depth = min_depth + 2 

stretch_depth = max_depth + 1
stretch_tree = stretch_depth.bottom_up_tree

print   "stretch tree of depth {stretch_depth}"
println "\t check: {=item_check(stretch_tree)}"
stretch_tree = nil

long_lived_tree = max_depth.bottom_up_tree

for depth=min_depth to max_depth step 2
  iterations = 2**(max_depth - depth + min_depth)

  check = 0

  for i=1 to iterations
    temp_tree = depth.bottom_up_tree
    check += temp_tree.item_check
  endfor

  println "{iterations}\t trees of depth {depth}\t check: {check}"

endfor

