#!/usr/bin/za

# mutual recursion benchmark

# this is heavy going for this interpreter. we do a lot, probably too much,
#  temporary state creation on a function call. most of it should be done on
#  a stack instead. However, not likely to change given typical expected usage.

define F(n)
    on n == 0 do return 1
    return n-M(F(n-1))
enddef

define M(n) 
    on n==0 do return 0
    return n-F(M(n-1))
enddef

input c optarg 1

if c!=""
    c=int(c)
    println F(c)
    println M(c)
    exit
endif

for n=0 to 39
    print F(n),", "
endfor

print

for n=0 to 39
    print M(n),", "
endfor

print

