#!/usr/bin/env za

// User and Group Management Demo
// This script demonstrates the user and group management capabilities

echo("=== User and Group Management Demo ===")

// Check if user management is available
if has_user_management() {
    echo("✓ User management capabilities available")
} else {
    echo("✗ User management capabilities not available (requires root privileges)")
    exit(1)
}

// List current users
echo("\n=== Current Users ===")
users = user_list()
for user in users {
    echo("User: " + user.username + " (UID: " + user.uid + ", GID: " + user.gid + ")")
    echo("  Home: " + user.home)
    echo("  Shell: " + user.shell)
    echo("  Groups: " + join(user.groups, ", "))
}

// List current groups
echo("\n=== Current Groups ===")
groups = group_list()
for group in groups {
    echo("Group: " + group.name + " (GID: " + group.gid + ")")
    echo("  Members: " + join(group.members, ", "))
}

// Test user creation
echo("\n=== Testing User Creation ===")
test_user = "za_test_user"
test_options = {
    "create_home": true,
    "shell": "/bin/bash",
    "description": "Test user created by Za"
}

try {
    result = user_add(test_user, test_options)
    if result {
        echo("✓ Successfully created user: " + test_user)
        
        // Get user info
        user_info = user_info(test_user)
        echo("  UID: " + user_info.uid)
        echo("  GID: " + user_info.gid)
        echo("  Home: " + user_info.home)
        echo("  Shell: " + user_info.shell)
    } else {
        echo("✗ Failed to create user: " + test_user)
    }
} catch err {
    echo("✗ Error creating user: " + err)
}

// Test group creation
echo("\n=== Testing Group Creation ===")
test_group = "za_test_group"
group_options = {
    "description": "Test group created by Za"
}

try {
    result = group_add(test_group, group_options)
    if result {
        echo("✓ Successfully created group: " + test_group)
        
        // Get group info
        group_info = group_info(test_group)
        echo("  GID: " + group_info.gid)
        echo("  Members: " + join(group_info.members, ", "))
    } else {
        echo("✗ Failed to create group: " + test_group)
    }
} catch err {
    echo("✗ Error creating group: " + err)
}

// Test group membership
echo("\n=== Testing Group Membership ===")
try {
    result = group_membership(test_user, test_group, "add")
    if result {
        echo("✓ Successfully added user " + test_user + " to group " + test_group)
        
        // Verify membership
        updated_group = group_info(test_group)
        echo("  Group members: " + join(updated_group.members, ", "))
    } else {
        echo("✗ Failed to add user to group")
    }
} catch err {
    echo("✗ Error adding user to group: " + err)
}

// Test user removal from group
echo("\n=== Testing Group Membership Removal ===")
try {
    result = group_membership(test_user, test_group, "remove")
    if result {
        echo("✓ Successfully removed user " + test_user + " from group " + test_group)
        
        // Verify removal
        updated_group = group_info(test_group)
        echo("  Group members: " + join(updated_group.members, ", "))
    } else {
        echo("✗ Failed to remove user from group")
    }
} catch err {
    echo("✗ Error removing user from group: " + err)
}

// Test group removal
echo("\n=== Testing Group Removal ===")
try {
    result = group_remove(test_group)
    if result {
        echo("✓ Successfully removed group: " + test_group)
    } else {
        echo("✗ Failed to remove group: " + test_group)
    }
} catch err {
    echo("✗ Error removing group: " + err)
}

// Test user removal
echo("\n=== Testing User Removal ===")
remove_options = {
    "remove_home": true
}

try {
    result = user_remove(test_user, remove_options)
    if result {
        echo("✓ Successfully removed user: " + test_user)
    } else {
        echo("✗ Failed to remove user: " + test_user)
    }
} catch err {
    echo("✗ Error removing user: " + err)
}

// Final user and group lists
echo("\n=== Final User List ===")
final_users = user_list()
echo("Total users: " + len(final_users))

echo("\n=== Final Group List ===")
final_groups = group_list()
echo("Total groups: " + len(final_groups))

echo("\n=== Demo Complete ===") 