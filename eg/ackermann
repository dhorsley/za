#!/usr/bin/za

var calls int

define ackermann(m,n)

    setglob calls = calls + 1
    if globkey("memoA",`{m},{n}`)
        return memoA[`{m},{n}`]
    endif

    on m==0 do return n+1
    on n==0 do return ackermann(m-1,1)

    o=ackermann(m-1,ackermann(m,n-1))
    setglob memoA[`{m},{n}`] = o

    return o

end


memoA[`0,0`] = 1
memoA[`0,1`] = 2
memoA[`0,2`] = 3
memoA[`1,0`] = 2
memoA[`1,1`] = 3


input a param 1
input b param 2
a=int(a)
b=int(b)

println a
println b

z=ackermann(a,b)
# println "A({a},{b}) = {=ackermann(a,b)}"
println "A({a},{b}) = {z}"
println "Calls : ",calls

