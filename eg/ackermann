#!/usr/bin/za

zero calls

define ackermann(m,n)

    calls=getglob("calls")
    inc calls
    setglob calls = calls

    if globkey("memoA","{m},{n}")==true
        return getglob("memoA[`{m},{n}`]")
    endif

    on m==0 do return n+1
    on n==0 do return ackermann(m-1,1)
    o=ackermann(m-1,ackermann(m,n-1))

    setglob memoA["{m},{n}"] = o
    return o

enddef


memoA[`0,0`] = 1
memoA[`0,1`] = 2
memoA["0,2"] = 3
memoA[`1,0`] = 2
memoA[`1,1`] = 3


input a param 1
input b param 2
a=int(a)
b=int(b)
println "A({a},{b}) = {ackermann(a,b)}"
println "Calls : ",calls

#for a = 0 to 4
#    for b = 0 to 6
#        println "A({a},{b}) = {ackermann(a,b)}"
#    endfor
#endfor

