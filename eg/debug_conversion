#!/usr/bin/za

# Debug the to_typed conversion issue

println "=== Testing simple 2D conversion ==="
data = [ ["hello", "world"] ]
println "Input type: " , kind(data)
println "Input length: " , len(data)
println "Input[0] type: " , kind(data[0])
println "Input[0] length: " , len(data[0])


result = data.to_typed("[][]string")


VAR test_2d [][]string
test_2d = result

println "After conversion:"
println "Output type: " , kind(test_2d)
println "Output length: " , len(test_2d)


println "test_2d direct: " , test_2d


println "Output[0] type: " , kind(test_2d[0])

println ""
println "=== Testing 3D conversion ==="

# Test 3D conversion step by step
inner1 = ["A1", "A2"].list_string
inner2 = ["B1", "B2"].list_string

middle = []
append_to(ref middle, inner1)
append_to(ref middle, inner2)

outer = []
append_to(ref outer, middle)

println "Inner1 type: " , kind(inner1)
println "Inner1 length: " , len(inner1)
println "Middle type: " , kind(middle)
println "Middle length: " , len(middle)
println "Outer type: " , kind(outer)
println "Outer length: " , len(outer)

VAR test_3d [][][]string
test_3d = outer.to_typed("[][][]string")

println "After 3D conversion:"
println "Output type: " , kind(test_3d)
println "Output length: " , len(test_3d)
if len(test_3d) > 0
    println "Output[0] type: " , kind(test_3d[0])
    println "Output[0] length: " , len(test_3d[0])
    if len(test_3d[0]) > 0
        println "Output[0][0] type: " , kind(test_3d[0][0])
        println "Output[0][0] length: " , len(test_3d[0][0])
    endif
endif 

