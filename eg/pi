#!/usr/bin/za

spaceat=10
digs=65
input digs optarg 1 is "Number of digits to calculate."

var q,t,k bigi   = 1n
var l,n bigi     = 3n
var l bigi       = 3n
var r,nn,nr bigi = 0n
spacecur=-1
iter=0
var dist map

println "Iterated Value:"

while digs>0
    iter++        
    if 4*q+r-t < n*t
        dist[n.as_string]+=1
        print fg256(as_string(n+1).as_int),n
        # print fg256(as_string(n+1).int),n
        on spacecur==-1 do print "."
        digs--
        if ++spacecur == 10
            print " "
            spacecur=0
        endif
        nr=10*(r-n*t)
        n=10*(3*q+r)/t-10*n
        q=q*10
        r=nr
    else
        nr=(2*q+r)*l
        n=(q*7*k+2+r*l)/(t*l)
        q=q*k
        t=t*l
        l=l+2
        k=k+1
        r=nr
    endif
endwhile
println "\n[#6]Iterations : {iter}[#-]"
println format("[#4]System Pi:\n%.40f[#-]",pi())
println "distributions : \n",dist

