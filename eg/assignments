#!/usr/bin/za -f

################################################
# test script for variable assignment
################################################

# keyword  : test name group gname [ assert fail|continue ] - define a test

doc "[#5]Variable Assignment Tests[#-]\n"

test "1" group "assignments"
    doc "[#6]Literal Assignment[#-]\n"
    test1=1
    assert test1==1
endtest

test "2" group "assignments"
    doc "[#6]Addition[#-]\n"
    test2=test1+5
    assert test2==6
endtest


test "3" group "assignments"
    doc "[#6]Expression Assignment[#-]\n"
    test3=test2*6+6
    assert test3==42
endtest

test "4" group "assignments"
    doc "[#6]Variable Assignment[#-]\n"
    test4=test3
    assert test4==test3
endtest

test "5" group "assignments"
    doc "[#6]Command Assignment[#-]\n"
    doc "  : Error code capture test.\n"
    capt =| false
    test5a = last()
    assert test5a==1
    doc "  : Awk output capture.\n"
    test5b =| awk 'BEGIN{print"awk test!"}'
    assert test5b=="awk test!"
endtest

test "6" group "assignments"
    doc "\n[#6]Loop Variable Assignment[#-]\n"
    doc "  : outer x -> [1 to 5 step 2] inner y -> [20 to 0 step -5]\n"
    for x = 1 to 5 step 2
        for y = 20 to 0 step -5
            doc "{x},{y}\n"
        endfor
    endfor
    assert x==5 && y==0
endtest

test "1" group "control"
    doc "[#6]Break Test[#-]\n"
    doc "  : should break at iteration 1.\n"
    for x = 1 to 20
        doc "{x}\n"
        break
    endfor
    # currently reaches the FOR an extra time before breaking out:
    assert x==1
endtest

test "2" group "control"
    doc "[#6]Continue Test[#-]\n"
    doc "  : should skip evens\n"
    for x = 1 to 20
        if x%2==0
            doc "Skipping {x}\n"
            continue
        endif
        assert (x%2)!=0
        doc "Didn't Skip {x}\n"
    endfor
endtest

