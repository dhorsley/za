#!/usr/bin/za

page = "pager"
input page optarg 1

t = map(.tablesend page)
s = map(
    .border map(.ih "", .iv "│", .tl "╒", .tr "╕", .bl "╘", .br "╛", .tm "═", .bm "═", .lm "│", .rm "│"),
    .hi_bg "[#b1]",
    .hi_fg "[#6]",
    .list ["", "[#1]", "", "[#2]", "", "[#3]", "", "[#4]", "", "", ""]
)

z = $in (execpath() + "/data/eg.csv")

t["data"] = z
t["format"] = "csv"
t["display"] = [1, 3, 4, 5, 7]
t["headers"] = true
t["row"], t["col"] = [2, 10]
t["height"], t["width"], t["title"] = [30, 120, ".csv to table"]

cls
aos = tui_table(t, s)

if page == "pager"
    tui_clear(t, s)
else
    println aos
endif

# array-of-struct

t["title"] = "struct to table"

struct ts
    index int
    i int
    b bool
    f float
    s string
es

ar = []
for e = 0 to 99
    uuid = ${uuidgen}
    ar[e] = ts(e, rand(100), itob(rand(2)-1), randf(100), uuid)
endfor
t["data"] = ar
t["format"] = "aos"
t["display"] = [0, 1, 2, 3, 4]
s["list"] = ["[#b2][#6]", "[#2]", "[#4]", "[#5]", "[#b1][#5]"]

aos = tui_table(t, s)
if page == "pager"
    tui_clear(t, s)
else
    println aos
endif

at term_h(), 1
cursoron()

