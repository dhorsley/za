#!/usr/bin/za

doc "Simple REPL loop example"
doc `
    absolutely unreliable :)
    input not sanitised, so things like stray pipe symbols will
    break the shell most of the time.
    just a demo
`

define show_help()
    at 1,1; print "Commands:"
    at 2,1; print "help, echo, quit"
end

define clear(r1,r2,c=nil)
    for e=r1 to r2
        clear_line(e,1)
    endfor
    at r1,1
end

define process(i)

    on i=="" do return

    fields(i)
    on NF==0 do return

    pane select "output"
    pane redraw

    clear(0,pane_h())
    at 0,0

    statement=F[1].trim(0)

    # remove entire list + statement from fields:
    F=F.tail.tail
 
    case $lc statement
    is "help"
        show_help()
    contains "^(exit|quit)$"
        @ term = true
    is "echo"
        foreach f in F
            print eval(f)
        endfor
    or
        result=|{i}
        if result.okay
            println result.out
        else
            println "Error in command: {i}"
        endif

    endcase

end


#
# MAIN
#

cls
# wrap(true) # unsupported

#           name        row col h   w           title   border
pane define "input",    1,  1,  2,  term_w(),   "",     "square"
pane define "output",   5,  1,  20, term_w(),   "",     "none"

term=false

while !term

    pane select "input"
    pane redraw

    at 1,1
    prompt inp "> "
    process(inp)

endwhile

pane select "global"
at 27,1

exit 0

