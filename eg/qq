#!/usr/bin/za

doc `
    detect unbalanced quotes in input file.
     - does not deal with utf-8 yet, or comments.
`

input filename param 1 is "filename"

def rep(m)
    print m,"[#-] @ ",row+1,",",e+1
    on osq or odq do print " - "
    on not (osq or odq) do println
end

osq=false
odq=false

fh=fopen(filename,"r")
on fh==nil do exit 66,"File {filename} cannot be read."

struct pos
    sl   int
    sc   int
    fl   int
    fc   int
endstruct

var ssp,dsp pos

p=0
row=0
col=0
lp=0

interpol(false)
while
    l=fh.fread("\n")
    if l.len==0 
        row+=1
        on !fh.feof do continue
        break
    endif
    println l
    for e=0 to l.len-1
        case l[e]
        is `"`
            if not osq
                odq=!odq
                if odq
                    cursorx(e+1); rep("[#4]start")
                    dsp.sl,dsp.sc=[row+1,e+1]
                    dsp.fl,dsp.fc=[0,0]
                else
                    rep("[#2]end")
                    dsp.fl,dsp.fc=[row+1,e+1]
                    dsp.sl,dsp.sc=[0,0]
                endif
            else
                # rep("[#6]skipping double")
            endif
        is `'`
            if not odq
                osq=!osq
                if osq
                    cursorx(e+1); rep("[#6]start")
                    ssp.sl,ssp.sc=[row+1,e+1]
                    ssp.fl,ssp.fc=[0,0]
                else
                    rep("[#2]end")
                    ssp.fl,ssp.fc=[row+1,e+1]
                    ssp.sl,ssp.sc=[0,0]
                endif
            else
                # rep("[#6]skipping single")
            endif
        endcase
    endfor
    row++
    on fh.feof do break
endwhile
p=fh.ftell
fh.fclose
interpol(true)

println
println "file name   : ",filename
println "file length : ",p
println
on ssp.sl!=0 and ssp.fl==0 do println "Unbalanced single quotes begin @ line {=ssp.sl} col {=ssp.sc}"
on dsp.sl!=0 and dsp.fl==0 do println "Unbalanced double quotes begin @ line {=dsp.sl} col {=dsp.sc}"

