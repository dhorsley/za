#!/usr/bin/za

module "modules/pidfile" as pf

this_uid =< id -u

def begin()
    print "Started.\n"
    while not quit
        pause 500
    endwhile
end

op="status"
input op optarg 1 is "operation type"

when op
is "start"
    on pf::has_pidfile() do exit 1,"Error: already started."
    on !pid().pf::make_pidfile do exit 2,"Error: could not create pidfile."
    quit=false
    async nil pf::monitor_pidfile()
    println "Starting ",pf::app_name()
    begin()
is "stop"
    if pf::has_pidfile()
        println "stopping ",pf::app_name(), " : ",pf::pid_name()
        pf::remove_pidfile()
    else
        exit 3,"Error: already stopped."
    endif
is "status"
    println "appname : ",pf::app_name()
    println "pidfile : ",pf::pid_name()
    println "has pid : ",pf::has_pidfile()
endwhen


