#!/usr/bin/za

# mutual recursion benchmark

# this is heavy going for this interpreter. we do a lot, probably too much,
#  temporary state creation on a function call. most of it should be done on
#  a stack instead. However, not likely to change given typical expected usage.


define F(n)
    if n == 0
        return 1
    endif
    return n - M(F(n-1))
enddef

define M(n) 
    if (n == 0)
        return 0
    endif
    return n - F(M(n-1))
enddef

input c param 1
c=int(c)

print F(c),"\n"
print M(c),"\n"

