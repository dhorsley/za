#!/usr/bin/za

module "mod_build/defines"

tgt="libc"
strip_enable=false
upx_enable=false

for e = 1 to argc()
    input do_what optarg e
    when $lc do_what
        is "upx"    ; upx_enable=true
        is "strip"  ; strip_enable=true
        is "alpine" ; tgt="alpine"
        is "libc"   ; tgt="libc"
        is "win"    ; tgt="win"
    endwhen
endfor


#
# main
#

GCLIMIT = "GOGC=80 GOMAXPROCS=4"
GCFLAGS = "-gcflags='-B -l=4'"

GCCGOFLAGS=""
doc ` uncomment line below for testing with GCC-GO compiler:
    GCCGOFLAGS = `-compiler=gccgo -gccgoflags='-O3 -march=native -ffast-math -lpthread'`
`

bvers =  "1.0.16"
bdate =| date "+%d-%m-%Y %H:%M"

upxfound=| which upx | wc -l
upxfound=trim(upxfound.out,0).int

if ! os() ~ "^freebsd"
    when tgt
    has tgt ~i "^(alpine|aws)$"
        if buildMusl(bvers,bdate.out)!=0
            exit e.build,"Failed to build musl version."
        endif
    is "libc"
        if buildLibc(bvers,bdate.out)!=0
            exit e.build,"Failed to build libc version."
        endif
    is "win"
        if buildWin(bvers,bdate.out) != 0
            exit e.build,"Failed to build windows version."
        endif
    or
        exit e.notfound,"Target type unknown."
    endwhen
else
    if buildFreeBSD(bvers,bdate.out) != 0
        exit e.build,"Failed to build bsd version."
    endif
endif


if is_file("za")
    if not os() ~ "^freebsd"
        if upxfound==1
            if tgt!="win"
                on strip_enable and not tgt ~i "^(alpine|aws)$" do | strip -s -w za
                on upx_enable                                   do | upx za
            endif
        else
            println "[#6]Note: Please consider installing the upx package for compressing the binary.[#-]"
        endif
    else
        # don't strip/upx freebsd version
    endif
endif


when tgt
contains "^(alpine|libc)$"
    println "[#4]Installing {tgt} build to /usr/bin/[#-]\n"
    | sudo cp -f za /usr/bin
    | sudo chmod 755 /usr/bin/za
endwhen


